<!--
    Copyright (C) 2014 Parrot SA

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Parrot nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
-->
<!--

   SDK3 Repo declaration :
   < repo name="repoName" rev="branch/tag/commit/DEV">
      <postDownloadAction command="command line to execute"/>
   </repo>
   External repo declaration :
   <extrepo url="http://url/to/repo.git" rev="branch/tag/commit">
   	 <postDownloadAction command="command line to execute"/>
   </extrepo>
   WGet file to download/unpack :
   <webfile url="http://www.site.com/file.tar.gz" storePath="../libName">
     <postDownloadAction command="command line to execute"/>
   </webfile>
   
   In any type, postDownloadAction is optionnal

   If the branch/tag/commit/DEV part is not provided, master will be used

   If a branch is provided, the build script will ensure that the local repo
   is on a local branch, tracking the "remote/origin/branch" branch. It will
   also try to update the branch to the latest revision

   If a tag or a commit sha1 is provided, the build script will ensure that
   the local repo is correctly on this tag/commit

   If DEV is provided, the script won't touch the repository status (it will
   still clone it into master if non-existant). This options should only be
   use by the SDK developers

   In all cases, no checkout/pull actions will be taken if the repository
   contains local commits, uncommited changes, or anything that might need
   a merge or a rebase. In this case, the script will fail with an error
   message

   -->

<repos>

  <!--
     The ARBuildUtils repo (this one, here) is not included
     because of different issues with a self-update:
     - Some scripts are already opened when the update is done
     and won't change in the python/bash engines
     - Any local changes (including to this file to select others revisions)
     will break the build, as the current repo would have changed files
    -->

  <!-- Utils Repositories -->
  <repo name="Docs" rev="17c39b4b09031158e862ac100d6283cf9859e1b2" forceBaseUrl="TRUE"/>

  <!-- SDK Repositories -->
  <repo name="libARCommands" rev="ea4f56fc741785643771ba0f3ba752eefce93d8c"/>
  <repo name="libARDiscovery" rev="c9ec4a82346c442ead76cf284fbb1a7a7e4f9829"/>
  <repo name="libARNetwork" rev="27ff2ce5ef85d13ed1b1fc5b9a3cdd3734de024a"/>
  <repo name="libARNetworkAL" rev="26dd083c97fdba7113a0fbbdf7a878e4ac79307f"/>
  <repo name="libARSAL" rev="e9d303a09d6b0af828bbfd2241c1543c6f97c86a"/>
  <repo name="libARStream" rev="b63edb7de2352d0cae2a20b5acbaf7f37d345f80"/>
  <repo name="libARMedia" rev="b097767cd879b7482bcd998b16b698dbbaf217f2"/>
  <repo name="libARUtils" rev="59982c66b828f4b142b33f980da60cd40303ce38"/>
  <repo name="libARUpdater" rev="2a34eac19ec1e069917d0a5adeedf9e02e1cd050"/>
  <repo name="libARDataTransfer" rev="715e36bfabe49faa046497a81739f7cc90a2f41b"/>
  <repo name="libARMavlink" rev="d3170c169347dbbd285863d704385ecfeb1660e8"/>
  <repo name="libARController" rev="8aaa4fe7274d1177cbab011e775c4f6137c73742"/>
  <repo name="Samples" rev="11a266c2b67d0d6057801e7e794c071649983f52" forceBaseUrl="TRUE"/>

  <repo name="curl" rev="curl-7_36_0-arsdk" forceBaseUrl="TRUE"/>

  <!-- External Repositories -->
  <extrepo url="https://github.com/mavlink/mavlink.git" rev="master">
    <postDownloadAction command="PYTHONPATH=../mavlink:$PYTHONPATH ../mavlink/pymavlink/tools/mavgen.py ../libARMavlink/Build/common.xml -o ../mavlink/generated/include/mavlink --lang C"/>
  </extrepo>

  <!-- External tar -->
  <webfile url="https://www.openssl.org/source/openssl-1.0.2b.tar.gz" storePath="../openssl"/>

  <!-- Prebuilt -->
  <webfile url="http://downloads.sourceforge.net/project/jmdns/jmdns/JmDNS%203.4.1/jmdns-3.4.1.tgz" storePath="../jmdns">
    <postDownloadAction command="cd lib; jar xf jmdns.jar"/>
    <postDownloadAction command="cd lib; jar cfm jmdns.jar META-INF/MANIFEST.MF javax/"/>
  </webfile>
  <webfile url="https://s3.amazonaws.com/json-c_releases/releases/json-c-0.9.tar.gz" storePath="../json-c"/>
  <webfile url="http://mirrors.ibiblio.org/pub/mirrors/maven2/org/apache/sanselan/sanselan/0.97-incubator/sanselan-0.97-incubator.jar" storePath="../sanselan"/>
  
  <extrepo url="https://github.com/troydhanson/uthash.git" rev="3022899165f32baaf67efbe79e098f0d5ba62d4f">
  </extrepo>

</repos>
